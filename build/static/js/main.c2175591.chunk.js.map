{"version":3,"sources":["Components/Gantt/gantt.js","Components/Header/header.js","Components/Gantt/DisplayGantt/displayGantt.js","Components/routing/routing.js","App.js","reportWebVitals.js","index.js"],"names":["Gantt","props","dataProcessor","initZoom","gantt","ext","zoom","init","levels","name","scale_height","min_column_width","scales","unit","step","format","value","setLevel","this","onDataUpdated","nextProps","attachEvent","id","task","priority","config","xml_date","tasks","ganttContainer","initGanttDataProcessor","parse","templates","scale_cell_class","date","task_class","start","end","progress","color","tooltip_date_format","date_to_str","formatFunc","destructor","Component","withRouter","allProjects","workspaces","projects","console","log","arr","map","item","index","className","data-toggle","aria-haspopup","aria-expanded","project","style","backgroundColor","DisplayGantt","projectName","allWorkspace","allTheWorkspaces","theCards","theTasks","mone","cards","push","indexOf","currDate","minYear","maxYear","year","start_date","split","concat","parseInt","toString","data","links","source","target","type","currentZoom","lineHeight","action","text","message","addMessage","Routing","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2175591.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { gantt } from 'dhtmlx-gantt';\r\nimport './gantt.css'\r\nimport 'dhtmlx-gantt/codebase/dhtmlxgantt.css';\r\nimport '../Gantt/gantt.css'\r\nimport { Redirect } from 'react-router';\r\n\r\nexport default class Gantt extends Component {\r\n\r\n    constructor(props) {\r\n        debugger\r\n        super(props);\r\n        this.initZoom();\r\n    }\r\n\r\n\r\n    dataProcessor = null;\r\n\r\n    initZoom() {\r\n        gantt.ext.zoom.init({\r\n            levels: [\r\n                // {\r\n                //     name: 'Hours',\r\n                //     scale_height: 60,\r\n                //     min_column_width: 30,\r\n                //     scales: [\r\n                //         { unit: 'day', step: 1, format: '%d %M' },\r\n                //         { unit: 'hour', step: 1, format: '%H' }\r\n                //     ]\r\n                // },\r\n                {\r\n                    name: 'Days',\r\n                    scale_height: 60,\r\n                    min_column_width: 40,\r\n\r\n                    scales: [\r\n\r\n                        { unit: \"month\", step: 1, format: \"%F %Y\" },\r\n                        { unit: \"day\", step: 1, format: \"%j\" }\r\n                        // { unit: 'month', step: 1, format: 'month #%W' },\r\n                        // { unit: 'week', step: 1, format: 'Week #%W' },\r\n                        // { unit: 'day', step: 1, format: '%d %M' }\r\n                    ]\r\n                },\r\n                // {\r\n                //     name: 'Months',\r\n                //     scale_height: 60,\r\n                //     min_column_width: 70,\r\n                //     scales: [\r\n                //         { unit: \"month\", step: 1, format: '%F' },\r\n                //         { unit: 'week', step: 1, format: '#%W' }\r\n                //     ]\r\n                // }\r\n            ]\r\n        });\r\n    }\r\n\r\n    setZoom(value) {\r\n        gantt.ext.zoom.setLevel(value);\r\n    }\r\n\r\n    initGanttDataProcessor() {\r\n        const onDataUpdated = this.props.onDataUpdated;\r\n        // this.dataProcessor = gantt.createDataProcessor((type, action, item, id) => {\r\n        //     return new Promise((resolve, reject) => {\r\n        //         if (onDataUpdated) {\r\n        //             onDataUpdated(type, action, item, id);\r\n        //         }\r\n\r\n        //         // if onDataUpdated changes returns a permanent id of the created item, you can return it from here so dhtmlxGantt could apply it\r\n        //         // resolve({id: databaseId});\r\n        //         return resolve();\r\n        //     });\r\n        // });\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps) {\r\n        return this.props.zoom !== nextProps.zoom;\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n\r\n        gantt.attachEvent(\"onBeforeTaskDisplay\", function (id, task) {\r\n            if (task.priority == \"high\") {\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        gantt.config.xml_date = \"%Y-%m-%d %H:%i\";\r\n        const { tasks } = this.props;\r\n        gantt.init(this.ganttContainer);\r\n        this.initGanttDataProcessor();\r\n        gantt.parse(tasks);\r\n\r\n        gantt.templates.scale_cell_class = function (date) {\r\n            debugger\r\n            // if(date.getDay()==4||date.getDay()==6){\r\n            return \"weekend\";\r\n        }\r\n        gantt.templates.task_class = function (start, end, task) {\r\n            if (task.progress > 0 && task.progress < 1) {\r\n                task.color = \"pink\";\r\n            }\r\n            else {\r\n                task.color = \"green\";\r\n            }\r\n        };\r\n        // gantt.templates.tooltip_text = function(start,end,task){\r\n        //     return \"<b>start:</b> \"+task.start_date+\"<br/><b>end:</b> \" + task.duration;\r\n        // };\r\n        gantt.templates.tooltip_date_format = function (date) {\r\n            var formatFunc = gantt.date.date_to_str(\"%Y-%m-%d\");\r\n            return formatFunc(date);\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.dataProcessor) {\r\n            this.dataProcessor.destructor();\r\n            this.dataProcessor = null;\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        // const { zoom } = this.props;\r\n        // this.setZoom(zoom);\r\n        return (\r\n            <>\r\n                {/* <div style={{height:'300px',width:'60px',backgroundColor:'black'}}></div> */}\r\n                {/* ref={(input) => { this.ganttContainer = input }}\r\n                style={{ width: '100%', height: '100%' }} */}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n","import { react, useEffect, useState } from 'react';\r\nimport './header.css'\r\nimport workspaces from '../Gantt/workspace.json'\r\n// import Gantt from '../Gantt/gantt'\r\n// import DisplayGantt from '../Gantt/displayGantt'\r\nimport { Route, Router, withRouter } from \"react-router-dom\";\r\nimport Switch from 'react-bootstrap/esm/Switch';\r\n// import useState from 'react-dom'\r\nfunction Header(props) {\r\n\r\n  // const [projectName, setProjectName] = useState(true);\r\n  const allWorkspace = { workspaces };\r\n  const allProjects = allWorkspace.workspaces.workspaces.projects;\r\n  // const routeToGantt = (projectName) => {\r\n  // props.history.push(`/Gantt/${projectName}`);\r\n  // }\r\n  const l = \"myName\";\r\n  // const colorCircle=allProjects.workspaces.workspaces.projects\r\n  console.log(allProjects);\r\n  const arr = []\r\n  allProjects.map((item, index) => {\r\n    arr[index] = item.name;\r\n  })\r\n  console.log(arr);\r\n\r\n  function goToGantt() {\r\n    // <Redirect to={'/Gantt'}></Redirect>\r\n    props.history.push('/Gantt/');\r\n    // history.push('/Gantt')\r\n    alert(\"camr\")\r\n  }\r\n\r\n  //const numbers = props.numbers;\r\n  // const listItemsProjectName = arr.map((number) =>\r\n  //   // <li>{number}</li>\r\n  //   <li>{number}</li>\r\n\r\n  // )\r\n\r\n\r\n\r\n\r\n  // function greetUser(e) {\r\n\r\n\r\n  // }\r\n\r\n  // const  handleClick = value => () => {\r\n\r\n\r\n  //    // history.push(`/Gantt/${value.name}`) ;\r\n  //     return \r\n  //     // <Redirect to='/Gantt/' />\r\n  //     <Redirect to={\"/Gantt/\" + value.name} />\r\n  //   };\r\n\r\n  return (\r\n    <>\r\n\r\n\r\n      <div className=\"container \">\r\n        <div className=\"row  header2\">\r\n\r\n        </div>\r\n\r\n        <div className=\"row header1\">\r\n          <div className=\"col-3\">\r\n            <div className=\"btn-group\">\r\n\r\n              <div className=\"dropBtn dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                Projects\r\n                   </div>\r\n\r\n              <div className=\"   dropContainer dropdown-menu dropdown-menu-right container \">\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col\">\r\n\r\n                  </div>\r\n\r\n                  {allProjects.map((project) =>\r\n\r\n                    <div className=\" row mt-2\"\r\n\r\n                    >\r\n                      <div className=\"col-1  itemCircle ml-3\" style={{ backgroundColor: project.color ? project.color : \"blue\" }}>   {project.name[0]} </div>\r\n                      <div className=\"col-1 \">\r\n\r\n\r\n                        {/* <Router>\r\n                          <nav >\r\n                            <Switch>\r\n                              <Route path=\"/Gantt/:projectName\">\r\n                                <Gantt />\r\n                              </Route>\r\n                            </Switch> */}\r\n\r\n                        <button\r\n                          // onClick={() => routeToGantt(project.name)}\r\n                          className=\" dropdown-item dropItem \"\r\n\r\n                        >\r\n\r\n                          {/* <Link to={`/Gantt/${project.name}`}> */}\r\n                          {project.name}\r\n                          {/* </Link> */}\r\n                        </button>\r\n\r\n\r\n\r\n\r\n                        {/* </nav>\r\n                        </Router> */}\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n\r\n                  )\r\n\r\n\r\n                  }\r\n\r\n\r\n\r\n\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n              </div>\r\n            </div>\r\n\r\n          </div> <div className=\"col-3\">\r\n\r\n          </div>\r\n          <div className=\"col-3 gantt\">\r\n            Gantt\r\n    </div>\r\n        </div>\r\n      </div>\r\n\r\n    </>\r\n\r\n\r\n\r\n\r\n  );\r\n}\r\nexport default withRouter(Header)","\r\nimport React, { Component } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport Routing from '../../routing/routing';\r\nimport Gantt from '../gantt';\r\nimport './displayGantt.css'\r\nimport workspaces from '../workspace.json'\r\n\r\nexport default function DisplayGantt() {\r\n\r\n    const projectName = \"project1\";\r\n    console.log(projectName);\r\n    const allWorkspace = { workspaces };\r\n    console.log(allWorkspace);\r\n    const allTheWorkspaces = allWorkspace.workspaces.workspaces.projects;\r\n\r\n\r\n    const theCards = []\r\n    const theTasks = []\r\n    const mone = []\r\n\r\n    allTheWorkspaces.map((item, index) => {\r\n        {\r\n            item.name === projectName ? item.cards.map((item, index) => {\r\n                {\r\n                    theCards.push(item);\r\n                    console.log(\"pppppppp\", item)\r\n\r\n                }\r\n\r\n            })\r\n                : console.log(\"bed\", item.cards);\r\n        }\r\n    })\r\n    console.log(\"the cards\", theCards);\r\n\r\n    {\r\n        theCards.map((item, index) => {\r\n\r\n            let indexOf = 0;\r\n\r\n            item.tasks.map((item) => {\r\n                indexOf++;\r\n\r\n\r\n                theTasks.push(item)\r\n\r\n\r\n            })\r\n\r\n            mone.push(indexOf)\r\n\r\n        })\r\n\r\n    }\r\n    console.log(\"mone\", mone);\r\n    let minYear = \"3000-01-01\";\r\n    let maxYear = \"1000-01-01\";\r\n    let currDate;\r\n\r\n\r\n\r\n    {\r\n        theTasks.map((item) => {\r\n            let year = item.start_date.split('-')[0];\r\n            if (year > maxYear.split('-')[0]) {\r\n\r\n                currDate = year\r\n                console.log(\"papapap\", year);\r\n                year = year.concat('-01-01')\r\n                console.log(\"tttt\", year);\r\n                maxYear = year;\r\n            } else if (year < minYear) {\r\n                minYear = year\r\n            }\r\n            else {\r\n                return\r\n            }\r\n\r\n\r\n        })\r\n\r\n\r\n    }\r\n    currDate = parseInt(currDate)\r\n    currDate = currDate + 2\r\n    currDate = currDate.toString();\r\n\r\n    currDate = currDate.concat('-01-01')\r\n\r\n    maxYear = currDate;\r\n    console.log();\r\n    theTasks.push(\r\n\r\n        {\r\n            \"id\": 2985730,\r\n            \"text\": \"first\",\r\n            \"start_date\": currDate,\r\n            \"duration\": 3,\r\n            \"progress\": 0.6,\r\n        })\r\n\r\n\r\n    console.log(\"the tasks\", theTasks);\r\n\r\n    const state = {\r\n        currentZoom: 'Days',\r\n        messages: []\r\n    };\r\n    const data = {\r\n        data: theTasks,\r\n        links: [\r\n            { id: 1, source: 7, target: 7, type: '0' }\r\n        ]\r\n    };\r\n\r\n    const logDataUpdate = (type, action, item, id) => {\r\n        let text = item && item.text ? ` (${item.text})` : '';\r\n        let message = `${type} ${action}: ${id} ${text}`;\r\n        if (type === 'link' && action !== 'delete') {\r\n            message += ` ( source: ${item.source}, target: ${item.target} )`;\r\n        }\r\n        this.addMessage(message);\r\n    }\r\n\r\n    const handleZoomChange = (zoom) => {\r\n        this.setState({\r\n            currentZoom: zoom\r\n        });\r\n    }\r\n\r\n\r\n    const { currentZoom, messages } = state;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"gantt-container row \">\r\n                <div className=\"col-2\"></div>\r\n                <div className=\"col-4\">\r\n                    {\r\n\r\n                        theCards.map((cards, index) =>\r\n                            <div className=\"cardsName\" style={{ lineHeight: mone[index] + 3 }}>{cards.name} </div>\r\n                        )\r\n                    }\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <Gantt\r\n                        tasks={data}\r\n                        zoom={currentZoom}\r\n                        onDataUpdated={logDataUpdate}\r\n                    />\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { react, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Link, withRouter, useParams, Redirect, useHistory } from \"react-router-dom\";\r\nimport Header from '../Header/header';\r\n// import Gantt from '../Gantt/gantt';\r\nimport DisplayGantt from '../Gantt/DisplayGantt/displayGantt';\r\n// import { createBrowserHistory } from 'history';\r\n// export const history = createBrowserHistory({ forceRefresh: true });\r\n\r\nimport { Provider } from 'react-redux'\r\nexport default function Routing() {\r\n\r\n    return (\r\n        <>\r\n\r\n            <Router>\r\n                <Header></Header>\r\n                <Switch>\r\n                    <Route path='/DisplayGantt/:projectName'>\r\n                        <DisplayGantt />\r\n                    </Route>\r\n                </Switch>\r\n\r\n            </Router>\r\n        </>\r\n\r\n    );\r\n}","\r\nimport React, { Component } from 'react';\r\nimport Gantt from './Components/Gantt/gantt';\r\nimport './App.css';\r\nimport Routing from './Components/routing/routing';\r\nimport { Router, Switch, Route } from 'react-router-dom'\r\nimport Header from './Components/Header/header'\r\nimport DisplayGantt from './Components/Gantt/DisplayGantt/displayGantt';\r\n\r\n\r\nexport default function App() {\r\n\r\n    return (\r\n        <div>\r\n            <Routing></Routing>\r\n            <br></br>\r\n            {/* <div className=\"row\">\r\n                <div className=\"col\">\r\n                <div style={{height:'300px',width:'50%',backgroundColor:'black'}}></div>\r\n                </div>\r\n                <div className=\"col\"> \r\n                <div style={{height:'300px',width:'50%'}}>\r\n                \r\n                </div>\r\n                \r\n               \r\n                 </div>\r\n            </div> */}\r\n            <DisplayGantt></DisplayGantt>\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}